SYNOPSIS

INTRODUCTION
The aim of this project is to deliver an application that runs in the android environment and supported by a web app for certain components as well. It will serve as a centralized hub or “one-stop shop” for various college related activities. The app will follow material design guidelines and use the android notification channels to notify the users about various alerts related to their educational institution. 
The main technology used will be obviously Android Studio 3.0. Since the app is meant to run within the android environment, we must use the studio to develop the app. Knowledge of xml to design the UI and JAVA to write the logic is important. Hence, an editor like Notepad++ and Sublime text for writing code is also used. Both software handles multiple languages very well. Sublime Text is excellent at auto completion and will be of massive help. 
The major functionality of the project involves the use of notifications. These notifications are to be centralized. They must be sent from server to everyone using the app via a network. This is a problem that must be tackled by us using a notification server like Google Cloud Messaging or a Firebase Server.

MOTIVATION
We as students encounter the very problem we are trying to solve every day. It is a norm to join certain google groups meant for the class each semester. This might seem centralized but it is rather very fragmented. There exist many WhatsApp groups for certain subjects as well. However, most electronic material seems to be delivered as PDFs to students via email. The google groups also generate another email. There is the added factor of course websites which sometimes can be incomplete, and other times – completely inaccessible. All in all, the entire situation to students and teachers seem cluttered.   
The students take additional measures to organize the material that they receive with custom inbox labels, separate documents to counter act the cluttered nature of the situation and so on. While others waste valuable time trying to find the right document to study at the wrong time. The entire ordeal seems like a problem that is easy to solve but not yet solved. This enabled us to take on this project to present a solution to this cluttered situation saving time and energy to both students and teachers.  
As mentioned, the very motivation we seek to do this project arises from our own day to day solution. This seems like the best place to actually find motivation to do take on a project rather than actively searching for it. By doing this project, we are primarily helping to improve our own lives, if not by a small amount. We hope that the solution provided will be a breakthrough for students everywhere that deal with this problem. With the advent and growth of electronic media and internet, the problem will only grow with time. Reducing the need to do our own work by automating it with another service is the first step towards optimizing our work flow.


EXISTING SYSTEM
In the current generation students across the globe are using emails, WhatsApp groups and email groups to share, open and read PDFs of textbooks, class notes, important announcements etc. These sources have been a boon to students as well as teachers over the years. With the advent of WhatsApp groups and email groups, a single message can be sent over to multiple clients. This reduced the time and effort required for sending one single message independently to each client. For student’s attendance, there exist online portal systems like Contineo and Moodle. Eventually, our movement as a generation towards electronic based communication and sharing is a definitive sign of progress. However, it comes with its own pitfalls.
WhatsApp groups and email groups are quick with the aspect of communication. But it does a have a lot of disadvantages. Almost every other student uses a smartphone today and millions of students use WhatsApp and email, hundreds of messages are sent and received every day and adding up the social media obsession and addiction students tend to overlook important messages. And moreover the time required to search for a message is considerable large. The massive fragmentation of information sources makes it an absolute mess to find anything of significant importance at the right time. Also, reliance on varied resources of information increases chance of the information going down. Sometimes the portal server might be overloaded. Other times, the messaging platform might not work as intended. The entry points for failure are of increasing magnitude and screams for revamping the current system into one that behaves as an integrating factor for the poorly fragmented sources.


PROPOSED SOLUTION
Pingr is a notification app made just for college use and it aims at providing a space for student teacher communication through notifications. The solution to the above mentioned disadvantage related to time and student negligence is eradicated with this app. Integrating the concepts of WhatsApp and email, this app tries to overcome few shortages of both email and WhatsApp. Since this app is made solely for notification, students time required to search for any messages is reduced.
By providing an interface to share notes and view PDFs teachers will find it easier to share notes and students will find it easier to view and download these notes. By providing features like attendance shortage notifier and student exam eligibility notifier in the same app, it helps in warning the students about their attendance and informs the students about their possibility to write an exam. Integration of CIE and calculation of SGPA and CGPA are also proposed features of the project which can be amazing if students want to know how exactly their grades are calculated. 



 
METHODOLOGY
We are trying to make the workflow of our project similar to an agile process model. The crux of the methodology is that we begin by laying the groundwork for the project and present a working basic frame of the application to the client. With time, new features are added. However, at certain intervals of time, the app is in a presentable state and a demo of the working features will be readily shown. The reason for choosing this workflow is because: 
•	Risk factor – When a working process model is present at every interval, risk involved with the project having a catastrophical failure is astronomical.  
•	Client confidence – When our project is being shown in small bits, it shows that we are actually working on the project
•	Time – Time is the most important factor in projects like this – for the developers, clients and end users. By presenting a working model and short intervals, we can show that time will not be as big a deciding factor as it should be because bar a massive glitch in the model, the project will proceed smoothly.  
 
The first step into the project is to build a framework or laying the base. This involves getting the setup and tools ready. It also needs the work environment to be concise and information to be easily accessible. With our client having a membership to IEEE and each member of the team access to high speed Internet and working laptops in excellent condition, this step is fairly easy. Our next step involves designing the UI. Even though we don’t have to design the entire UI, we need to lay down the canvas to draw the painting. XML is a deciding factor here. After the UI, we must make a presentable demo of the UI with a certain notification. This represents a beginning milestone of the project as it indicates significant progress.   
Our next steps involve getting familiarized with the server – client messaging frameworks like Firebase and GCM. As notifications are an important factor in our application, a very deep knowledge of these frameworks is an absolute must. Later on, having we implement the framework into our application. This represents a second milestone where we have completed nearly two-thirds of our project. Finally, we develop a web client for the Representative of the classes to send the notifications. Again, implementation of firebase is needed. After extensive testing to the client satisfaction, we present our finished application.
